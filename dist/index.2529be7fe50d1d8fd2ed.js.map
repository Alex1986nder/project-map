{"version":3,"sources":["webpack://webpack-env/./src/js/templates.js","webpack://webpack-env/./src/index.js"],"names":["templates","ymaps","ready","init","myMap","placemark","coords","clusterer","Map","center","zoom","balloonMinWidth","events","add","e","get","balloon","open","content","Clusterer","groupByCoordinates","clusterDisableClickZoom","clusterOpenBalloonOnClick","geometry","getCoordinates","openBaloon","storage","JSON","parse","localStorage","getItem","renderPlacemark","forEach","reviews","createPlacemark","arr","document","body","addEventListener","onClick","target","id","myName","querySelector","place","review","newReview","name","value","push","setItem","stringify","close","reviewList","console","log","Placemark","geoObjects"],"mappings":"4BAAO,IAAMA,EAAY,qV,wkCCIzBC,MAAMC,MAAMC,GACZ,IAAIC,EAAOC,EAAWC,EAAQC,EAE9B,SAASJ,IACPC,EAAQ,IAAIH,MAAMO,IAChB,MACA,CACEC,OAAQ,CAAC,UAAW,WACpBC,KAAM,IAER,CACEC,gBAAiB,MAIrBP,EAAMQ,OAAOC,IAAI,QAAS,SAAUC,GAClC,IAAIR,EAASQ,EAAEC,IAAI,UACnBX,EAAMY,QAAQC,KAAKX,EAAQ,CACzBY,QACE,8EACAlB,MAINO,EAAY,IAAIN,MAAMkB,UAAU,CAC9BC,mBAAoB,KACpBC,wBAAyB,KACzBC,0BAA2B,QAG7Bf,EAAUK,OAAOC,IAAI,QAAS,SAACC,GAC7B,IAAMR,EAASQ,EAAEC,IAAI,UAAUQ,SAASC,iBACxCC,EAAWnB,KAGb,IAAIoB,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GAE7DC,IAEA,SAASA,IACPL,EAAQM,QAAQ,SAACC,GACfC,EAAgBD,EAAQ3B,UAG5B,IAAI6B,EAAMN,aAAaC,QAAQ,WAC3BH,KAAKC,MAAMC,aAAaC,QAAQ,YAChC,GAEJM,SAASC,KAAKC,iBAAiB,QAASC,GAExCnC,EAAMQ,OAAOC,IAAI,QAAS,SAAUC,GAClC,OAAQR,EAASQ,EAAEC,IAAI,YAGzB,SAASwB,EAAQzB,GACf,GAAIA,EAAE0B,OAAOC,KAAO,MAAO,CACzB,IAAMC,EAASN,SAASO,cAAc,WACtC,IAAMC,EAAQR,SAASO,cAAc,UACrC,IAAME,EAAST,SAASO,cAAc,WAEtC,IAAMG,EAAY,CAChBxC,OAAQA,EACR2B,QAAS,CACPc,KAAML,EAAOM,MACbJ,MAAOA,EAAMI,MACbH,OAAQA,EAAOG,QAGnBb,EAAIc,KAAKH,GACTjB,aAAaqB,QAAQ,UAAWvB,KAAKwB,UAAUhB,IAC/CD,EAAgB5B,GAChBF,EAAMY,QAAQoC,SAIlB,SAAS3B,EAAWnB,EAAQoB,GAC1BA,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACzD,IAAIuB,EAAa,GAFkB,QAGd3B,GAHc,MAGnC,2BAA8B,KAAnBmB,EAAmB,QAE5B,GAAIlB,KAAKwB,UAAUN,EAAOvC,UAAYqB,KAAKwB,UAAU7C,GAAS,CAC5D+C,GAAc,WAAJ,OAAeR,EAAOZ,QAAQc,KAA9B,gBAA0CF,EAAOZ,QAAQW,MAAzD,uBAA6EC,EAAOZ,QAAQY,OAA5F,UAEVzC,EAAMY,QAAQC,KAAK4B,EAAOvC,OAAQ,CAChCY,QACE,oFAA6EmC,EAA7E,gBACArD,IAEJsD,QAAQC,IAAIF,KAbmB,+BAiBrC,SAASnB,EAAgB5B,EAAQ2B,GAC/B5B,EAAY,IAAIJ,MAAMuD,UAAUlD,GAChCD,EAAUO,OAAOC,IAAI,QAAS,SAACC,GAC7B,IAAMR,EAASQ,EAAEC,IAAI,UAAUQ,SAASC,iBAExCC,EAAWnB,KAEbC,EAAUM,IAAIR,GACdD,EAAMqD,WAAW5C,IAAIN,M","file":"index.2529be7fe50d1d8fd2ed.js","sourcesContent":["export const templates = `\r\n<h1>Отзыв</h1>\r\n<ul style = \"padding: 0; list-style-type: none;\">\r\n<li><input id = \"myName\" placeholder=\"Укажите Ваше имя\"></li>\r\n<li><input id = \"place\" placeholder=\"Укажите место\"></li>\r\n<li><textarea id = \"review\" style = \"resize: none;\" placeholder=\"Оставьте отзыв\"></textarea>\r\n<li><button id = \"btn\">Добавить</button></li>\r\n<ul>\r\n`;\r\n","// import './index.html';\n// import './style.css';\nimport { templates } from './js/templates';\n\nymaps.ready(init);\nlet myMap, placemark, coords, clusterer;\n\nfunction init() {\n  myMap = new ymaps.Map(\n    'map',\n    {\n      center: [55.752296, 37.602629],\n      zoom: 14,\n    },\n    {\n      balloonMinWidth: 250,\n    }\n  );\n\n  myMap.events.add('click', function (e) {\n    let coords = e.get('coords');\n    myMap.balloon.open(coords, {\n      content:\n        '<div id = \"review__list\"; style = \"height: 100px; overflow: scroll;\"></div>' +\n        templates,\n    });\n  });\n\n  clusterer = new ymaps.Clusterer({\n    groupByCoordinates: true,\n    clusterDisableClickZoom: true,\n    clusterOpenBalloonOnClick: false,\n  });\n\n  clusterer.events.add('click', (e) => {\n    const coords = e.get('target').geometry.getCoordinates();\n    openBaloon(coords);\n  });\n\n  let storage = JSON.parse(localStorage.getItem('reviews')) || [];\n  \n  renderPlacemark();\n  \n  function renderPlacemark() {\n    storage.forEach((reviews) => {\n      createPlacemark(reviews.coords);\n    });\n  }\n  let arr = localStorage.getItem('reviews')\n    ? JSON.parse(localStorage.getItem('reviews'))\n    : [];\n\n  document.body.addEventListener('click', onClick);\n\n  myMap.events.add('click', function (e) {\n    return (coords = e.get('coords'));\n  });\n\n  function onClick(e) {\n    if (e.target.id === 'btn') {\n      const myName = document.querySelector('#myName');\n      const place = document.querySelector('#place');\n      const review = document.querySelector('#review');\n\n      const newReview = {\n        coords: coords,\n        reviews: {\n          name: myName.value,\n          place: place.value,\n          review: review.value,\n        },\n      };\n      arr.push(newReview);\n      localStorage.setItem('reviews', JSON.stringify(arr));\n      createPlacemark(coords);\n      myMap.balloon.close();\n    }\n  }\n\n  function openBaloon(coords, storage) {\n    storage = JSON.parse(localStorage.getItem('reviews')) || [];\n    let reviewList = '';\n    for (const review of storage) {\n      // console.log(review)\n      if (JSON.stringify(review.coords) === JSON.stringify(coords)) {\n        reviewList += `<div><b>${review.reviews.name}</b>[${review.reviews.place}]</div><div>${review.reviews.review}</div>`;\n        // console.log(JSON.stringify(review.coords), JSON.stringify(coords));\n        myMap.balloon.open(review.coords, {\n          content:\n            `<div id = \"review__list\"; style = \"height: 100px; overflow: scroll;\"><div>${reviewList}</div></div>` +\n            templates,\n        });\n        console.log(reviewList);\n      }\n    }\n  }\n  function createPlacemark(coords, reviews) {\n    placemark = new ymaps.Placemark(coords);\n    placemark.events.add('click', (e) => {\n      const coords = e.get('target').geometry.getCoordinates();\n\n      openBaloon(coords);\n    });\n    clusterer.add(placemark);\n    myMap.geoObjects.add(clusterer);\n  }\n}\n\n"],"sourceRoot":""}